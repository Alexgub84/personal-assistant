GENERAL (GLOBAL)
- TypeScript only; "strict", "noImplicitAny", "strictNullChecks".
- Scoped edits only; output unified diffs.
- Plan (1–3 steps) before multi-file changes.

TESTING
- Unit tests for any new/changed logic.
- Small, pure, deterministic functions.
- DI/mocks for I/O. Backend: Vitest+supertest; Frontend: RTL+msw.

ARCH
- /client (React), /api (Node), /core (shared).
- routes → handlers → services → repositories → schemas. No DB in routes.
- Env via `env.ts` (Zod). No `process.env` elsewhere.

AI / LANGCHAIN
- `core/tools` are pure; side effects isolated.
- Chains/tools have Zod IO schemas; unit tests with fake providers.
- Keep tiny offline evals (golden chats).

DOCS
- Auto-maintain `README.md` (name, desc, stack, structure, setup, deploy, status).
- TSDoc on all exported functions.

SECURITY
- Don't log secrets/PII. Validate config on boot. Use secrets manager.

DX
- Lean deps; no circular imports. Small PRs (<300 LOC). Conventional Commits.

OUTPUT
- Return diffs only. No full-file rewrites unless asked.
